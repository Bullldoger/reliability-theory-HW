det([[A11, A12, A13], [A21, A22, A23], [A31, A32, A33]], D) :-	D is A11 * A22 * A33 
																	- A11 * A32 * A23
																	- A12 * A21 * A33
																	+ A12 * A23 * A31
																	+ A13 * A21 * A32
																	- A13 * A22 * A31.

diff([[A11, A12, A13], [A21, A22, A23], [A31, A32, A33]], [X1, X2, X3], D) :-	det([[A11 - X1, A12 - X2, A13 - X3], [A21 - X1, A22 - X2, A23 - X3], [A31 - X1, A32 - X2, A33 - X3]], D).

points2print([P1, P2, P3]) :-	print(P1),
								print(P2),
								print(P3).

%% length([], 0). 
%% length([X|L], N) :- length(L, M), 
%% 					N is M + 1.

st([]).
st([H|T]) :-	onePoint(H, T),
				st(T).

onePoint(_, []).
onePoint(_, [_]).
onePoint(_, [_, _]).
onePoint(P1, [H|T]) :-	onePoint(P1, T),
						twoPoint(P1, H, T, L). 
						%% print(L).

twoPoint(_, _, [], L) :-	L = [].
twoPoint(P1, P2, [H|T], L) :-	twoPoint(P1, P2, T, L1),
								threePoint(P1, P2, H, T, L1),
								%% print(L1),
								%% append(L1, [P1, P2, H], L),
								%% print(L1).
								length(L1, N),
								%% print(L1),
								%% print(N),
								(
								N > 0
								->	
								append(L1, [P1, P2, H], L);
								append([], [], L)
								).
								%% print(OUT),
								%% append(OUT, [P1, P2, H], RES),
								%% print(RES).

threePoint(P1, P2, P3, [], L) :-	L = [].
threePoint(P1, P2, P3, [H|T], L) :-	threePoint(P1, P2, P3, T, L1),
									diff([P1, P2, P3], H, D),
									print(D),
									(D = 0
									->
									append(L1, [H], L);
									append(L1, [], L)
									).